datasets:

  Appication.dataset.ListOfInformationSystems:
    source: >
      (

        $Datalake := $;
      
        /* Используемые справочники */
        $DictionaryAppStatus := $Datalake.dictionaries."settings.applications_status".parameters;
        $GetStatus := function($v) {( $DictionaryAppStatus[name=$v] )};
  
        $DictionaryDevModel := $Datalake.dictionaries."settings.development_model".parameters;
        $GetDevModel := function($v) {( $DictionaryDevModel [name=$v] )};
      
        $DictionaryBasicSolutions := $Datalake.dictionaries."settings.BasicSolutions".parameters;
        $GetBasicSolutions := function($v) {( $DictionaryBasicSolutions [name=$v] )};

        /* Используемые константы */        
        $ComponentCardSystem  := Constants.ComponentCard.System;
        $ComponentCardDefault := Constants.ComponentCard.Default;
      
        /* Компоненты типа = приложение/сервис */
        $Components := $distinct($Datalake.components.$sift(function($v) { $v.extension.type="system"}));
      
        /* Последовательный перебор комопнентов */        
        $Components.$spread().(
      
          $ComponentId := $keys()[0];
          
          /*Организация-владелец*/
          $organization_id := $split($ComponentId, ".", 1) ~> $join('.');
      
          /* Функцональный контура приложений/сервисов */
          $functional_area_id := $split($ComponentId, ".", 3) ~> $join('.');
      
          /* Базовое решение */
          $BasicSolutions := $GetBasicSolutions(*.extension.basic_solution);
      
          *.{
            "id":                      $ComponentCardDefault & $ComponentId,
            "extended_component_card": $ComponentCardSystem & $ComponentId,
      
            "title":                   title,
            "entity":                  entity,
            "description":             description,
      
            "type":                    extension.type,
            "area":                    $functional_area_id ? $lookup($Datalake.components, $functional_area_id).title : $functional_area_id,
            "area_id":                 $functional_area_id ? $ComponentCardDefault & $functional_area_id: "",
      
            "state":                   $GetStatus(extension.state).title,
            "state_update_date":       extension.state_update_date,
            "development_model":       $GetDevModel(extension.development_model).title,
      
            
            "basic_solution":          $BasicSolutions.title,
            "basic_solution_link":     $BasicSolutions.link,
            "basic_solution_state":    $BasicSolutions.state,
            "basic_solution_summary":  ($BasicSolutions.title & ", статус: " & $BasicSolutions.state),
            "development_platform":    $BasicSolutions.development_platform,
      
            "organization_title":      $organization_id ? $lookup($Datalake.components, $organization_id).title : $organization_id,
            "organization_link":       $organization_id ? $ComponentCardDefault & $organization_id: ""
          };
      
        )
      
      )     

  # Опциональная документация по системе или её компонентам, документация не выводится в меню, он прикрепляется к карточке системы
  Application.dataset.ApplicationDocs:
    source: >
      (
          $system_id := $params.component;

          docs.$spread().(

            $DocID := $keys()[0];
            $DocIsDesignedForSystem := $system_id in *.subjects;

            {

              "Doc_ID": $DocID,
              "Doc_Link": "/docs/" & $DocID,
              "Doc_Description": *.description,
              "Doc_Category": *.category

            }[$DocIsDesignedForSystem and Doc_Category="Документация по системе или её компонентам"]

          )

      )

  # Используемые технологии при разработке приложения
  Application.dataset.Technologies:
    source: >
      (
      
        $DataLake := $;
        $AppId    := $params.component; /*"Romashka.Systems.ArchitectureManagement.Dochub";*/
        $FoundApp := $lookup(components, $AppId);
  
        $FoundApp.technologies.(
  
            $FoundTechnologyOfApp := $lookup($DataLake.technologies.items, $);
  
            {
                "technology_ID": $,
                "technology_title": $FoundTechnologyOfApp ? $FoundTechnologyOfApp.title : $,
                "technology_link": $FoundTechnologyOfApp ? $FoundTechnologyOfApp.link : "",
                "technology_section": $FoundTechnologyOfApp? $FoundTechnologyOfApp.section : "Не определён",
                "technology_status": $FoundTechnologyOfApp ? $FoundTechnologyOfApp.status : "Не определён",
                "technology_aliases": $FoundTechnologyOfApp ? $join($FoundTechnologyOfApp.aliases, ", ") : ""
            }
  
        )^(technology_title);

      )    

  # Ключевые сотрудники, контакты
  Application.dataset.KeyContacts:
    source: >
      (
        $ComponentId := $params.component; /*"Romashka.Systems.ArchitectureManagement.Dochub"*/
        
        /* Найденный компонент */
        $Datalake := $;
        $FoundComponent := $lookup($Datalake.components, $ComponentId);
        
        /*Используемые справочники */
        $DictionaryAccounts := $Datalake.dictionaries."accounts".parameters;
        $DictionaryContacts := $Datalake.dictionaries."settings.contacts".parameters;
      
        /* Указанные в компоненте варианты контактов в блоке $.extension.contacts: */  
        
        $ComponentContacts := $DictionaryContacts.(
  
            $Name := name;
            $AccountNames := $spread($FoundComponent.extension.contacts).$sift(function ($v, $k) { $k = $Name }).*;
  
            {
                "title": title,
                "scrum_title": scrum_title,
                "is_optional": is_optional,
                "order_index": order_index,
                "description": description,
                "account_names": [$AccountNames]
            }[$not(is_optional) or $count(account_names) > 0];
  
        )^(order_index);
  
        $ComponentContacts.(
  
            $ContactSettings := $;
  
            account_names.(
  
                $AccountSettings := $eval($Datalake.functions.get_account,{"username": $, "accounts": $DictionaryAccounts});
  
                {
                    "title": $ContactSettings.title,
                    "scrum": $ContactSettings.scrum_title,
                    "res_persons": $AccountSettings.title,
                    "acc_persons": $AccountSettings.name,
                    "acc_link": $AccountSettings.acc_link,
                    "acc_email": $AccountSettings.email,
                    "acc_description": $ContactSettings.description
                } 
            )
        );
      
      )
      

  # Функциональность приложений и сервисов
  Application.dataset.Aspects:
    source: >   
      (  

        $DataLake := $;
        $AppId := $params.component; /* "Romashka.Systems.FinancialManagement.EK_ASUFR3_1C_ERP";*/
        
        $FoundApplication := $lookup($DataLake.components, $AppId);
        
        $FoundApplication.aspects.(
          {
            "component_id": $AppId,
            "aspect_id":  $,
            "aspect_title": $lookup($DataLake.aspects, $).title,
            "aspect_link": "/architect/aspects/" & $aspect_id
          })^(aspect_title)        
      
      )