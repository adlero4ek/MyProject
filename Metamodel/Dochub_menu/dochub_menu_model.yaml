entities:
  # Типы кластеров
  dochub_menu:
    title: Menu DocHub
    menu: >
      (
        $dochub_menu := $.dochub_menu;

        $makeLocation := function($id) {(
          $arrleft := function($arr ,$count) {
            $map($arr, function($v, $i) {
            $i <= $count ? $v
            })
          };

          $domains := $split($id, ".");
          
          $join($map($domains, function($domain, $index) {(
            $lookup($dochub_menu, $join($arrleft($domains, $index), ".")).(visible = true ? title)
            )}), "/");
        )};

        /*+++ДОБАВЛЕНИЕ
        /*+++ОРИГИНАЛ
        $append([{
            "icon": *.icon,
            "location": "Развитие корп архитектуры/Инструменты/DocHub/Структура меню DocHub",
            "link": "entities/dochub_menu/menu_tree"
          }],
          [
            $.dochub_menu.$spread().(
            $visible := *.visible;
            $visible = true
            ?
              (
                {
                "icon": *.icon,
                "location": $makeLocation($keys()[0]),
                "order": *.order
                }
              )
            )
          ][location]
        );
        /*---ОРИГИНАЛ*/
        [$.dochub_menu.$spread().(
           $visible := *.visible;
           $visible = true
           ?
             (
               {
               "icon": *.icon,
               "location": $makeLocation($keys()[0]),
               "order": *.order
               }
             )
           )
        ][location]
        /*---ДОБАВЛЕНИЕ*/
      )

    presentations:
      menu_tree:
        type: plantuml
        template: templates/menu_tree.puml
        source: >
          (
              $set("rpev-id", undefined);
              $arrleft := function($arr ,$count) {
                  $map($arr, function($v, $i) {
                      $i <= $count ? $v
                  })
              };
              $dochub_menu := $.dochub_menu;
              [$dochub_menu.$spread().($merge([{"id" : $keys()[0]}, $.*]))^(order).(
                  $prev_nodes := $split($get("rpev-id"), ".");
                  $prev_level := $count($prev_nodes);
                  $curr_nodes := $split(id, ".");
                  $set("isdiff", false);
                  $result := $map($curr_nodes, function($v, $i) {(
                      $set("isdiff", $get("isdiff") or $prev_level = 0 or $prev_level <= $i or $v != $prev_nodes[$i]) ? (
                          $id := $join($arrleft($curr_nodes, $i), ".");
                          $menu :=  $lookup($dochub_menu, $id);
                          {
                              "id": $id,
                              "level": $pad("", $i + 2, "*"),
                              "title": $menu ? $menu.title : $id
                          }
                      );
                  )});
                  $set("rpev-id", id);
                  $result
              )];
          )