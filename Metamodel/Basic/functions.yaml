functions:
  
  get_system_and_subsystem_by_id: >
    (
  
      $Id := $.Id;
      $Datalake := $.Datalake;
    
      $CountPoints := $count($split($Id, "."));
      $ParrentComponent_Id := $split($Id, ".", $CountPoints-1)~> $join('.');
      
      $Component := $lookup($Datalake.components, $Id);
      $ComponentIsObject := $type($Component)="object";
      
      $ComponentType := $Component.extension.type;
      
      $System := $ComponentIsObject=false ? "" :
        $ComponentType="system" ? $Id :
          $ComponentType="subsystem" ? $ParrentComponent_Id : "";
      
      $SybSystem := $ComponentIsObject=false ? "":
        $ComponentType="system" ? "":
          $ComponentType="subsystem" ? $Id : "";
        
        {
          "System_Id": $System,
          "System_link": "/architect/components/" & $System,
          "System_title": $lookup($Datalake.components, $System).title,
          "SubSystem_Id": $SybSystem,
          "SubSystem_link": "/architect/components/" & $SybSystem,
          "SubSystem_title": $lookup($Datalake.components, $SybSystem).title
        }
    )

  # $eval($.functions.get_quality_features,{"feature": "total_cpu", "query": $query, "components": components});
  # Варианты feature описаны в методе $GetTotal
  get_quality_features: >
    (

     $GetColor := function($x) {(

        $contains($x, ".Dev") ? "green" :
          $contains($x, ".Prod") ? "lightblue" :
            $contains($x, ".Test") ? "orange" :
              $contains($x, ".Stage") ? "pink" : "red"

      )};

      $GetTotal := function($x, $c) {(

        $x = "total_cpu" ? $c{`Cluster_id`: $sum(server_cpu)} :
          $x = "total_ram" ? $c{`Cluster_id`: $sum(server_ram)} :
            $x = "total_nodes" ? $c{`Cluster_id`: $count($distinct(node_id))} :
              $x = "total_servers" ? $c{`Cluster_id`: $count($distinct(server_id))} :
                $x = "total_size_hdd_type_1" ? $c{`Cluster_id`: $sum(server_storage_size_hdd_type_1)} :
                  $x = "total_size_hdd_type_2" ? $c{`Cluster_id`: $sum(server_storage_size_hdd_type_2)} :
                    $x = "total_size_hdd_type_3" ? $c{`Cluster_id`: $sum(server_storage_size_hdd_type_3)} : 0

        )};

      $feature    := $.feature;
      $query      := $.query;
      $components := $.components;
      $Clusters   := $distinct($query.Cluster_id);

      {
        "datasets": 

            $Clusters.(

              $Cluster_id := $;
              $Cluster := $lookup($components, $Cluster_id);

              {
                "label": $Cluster.title,      
                "backgroundColor": $GetColor($Cluster_id),
                "data":[$lookup($GetTotal($feature, $query), $Cluster_id)]
              }

           )
      }

    )


  # $eval($.functions.add_months,{"dateString": now(), "addMonths": 12});
  # dateString - исходная дата
  # addMonths - количество добавляемых месяцев

  add_months: >
    (
      $dateString := $.dateString;
      $addMonths  := $.addMonths;
    
      $date := $dateString ~> $toMillis();
      
      $newYear := ($date ~> $fromMillis("[Y,4]") ~> $number());
      $newMonth := ($date ~> $fromMillis("[M]") ~> $number()) + $addMonths;
      $newDay := ($date ~> $fromMillis("[D]") ~> $number());
      
      $newMonth > 12
      ?   $newYear := $newYear + 1;
      
      $newMonth > 12
      ?   $newMonth := $newMonth - 12;
      
      $lastDay := (
        $newMonth in [1,3,5,7,8,10,12]
        ?   31
          : $newMonth in [4,6,9,11]
        ?   30
          : (   $newYear%4=0
              and
              ($newYear%100 != 0 or $newYear%400 = 0)
              ?   29
          : 28)
        );
      
      $newDay > $lastDay ? $newDay := $lastDay;
      
      ($newYear & "-" & $newMonth & "-" & $newDay) ~> $toMillis("[Y]-[M]-[D]")  ~> $fromMillis()
    
    )