rules:
  validators:
    BusinessObjects:
      title: "Бизнес сущности (BusinessObjects): Базовые проверки полноты и корректности заполнения"
      schema:
        type: object
        properties:
          # Основные атрибуты
          title:
            type: string
            minLength: 10
          description:
            type: string
            minLength: 9
          type:
            type: string
            minLength: 5
          division_owner:
            type: string
            minLength: 9
          state:
            type: string
            minLength: 5
          state_update_date:
            type: string
            pattern: \d{4}[-.]\d{2}[-.]\d{2}
          architect:
            type: string
            minLength: 5
          # Состав атрибутов
          parameters:
            title: Атрибуты
            type: array
            minItems: 2
            items:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                description:
                  type: string
                  minLength: 5
                type:
                  type: string
                  minLength: 4
              required:
                - name
                - description
                - type
        required:
          - title
          - description
          - type
          - division_owner
          - state
          - state_update_date
          - architect
          - parameters
        additionalProperties: true
      source: >
        (
          $validator := $jsonschema(rules.validators.BusinessObjects.schema);

          $Query := $.BusinessObjects.$spread().(

              $ID := $keys()[0];

              {
                  "id": $ID,
                  "isvalid": $validator($.*)
              }

          )[isvalid != true];
        
          [$Query.(
        
            $id := id;
        
            $.isvalid.{
              "uid": "$custom-BusinessObjects-main-attributes-" & $id & "-" & params.missingProperty & $replace(instancePath, "/", "-"),
              "location": "/entities/BusinessObjects/blank?id=" & $id,
              "correction": "Корректно заполните реквизит: " & $replace(instancePath, "/", "",1),
              "description": message
            }
          )]
        )
    BusinessObjects_HeaderAttributes:
      title: "Бизнес сущности (BusinessObjects): Значения, указанные в поле type являются бизнес сущностями"
      source: >
        (
       
          $Datalake := $;
          
          $Query := $distinct(BusinessObjects.$spread().(
          
            $BusinessObject_ID :=  $keys()[0];
            
            {
              "BusinessObject_ID": $BusinessObject_ID,
              "Attribute": "division_owner",
              "Attribute_value": *.division_owner,
              "IsValid": $type($lookup($Datalake.components, *.division_owner))="object"
            }[IsValid=false]
          
          ));
          
          [$Query.(
            {
              "uid": "$custom-BusinessObjects-HeaderAttributes-" & BusinessObject_ID & "-" & Attribute,
              "location": "/entities/links/blank?id=" & BusinessObject_ID,
              "correction": "Корректно заполните реквизит: " & Attribute & " \n текущее значение = " & Attribute_value,
              "description": "Значение реквизита должно быть заполнено строкой в формате DDD, ссылающейся components"
            }
          )]
        
        )
    BusinessObjects_TypeIsBusinessObject:
      title: "Бизнес сущности (BusinessObjects): Значения, указанные в поле type являются бизнес сущностями"
      source: >
        (
           $TypeIsValid := function($Type, $Datalake) {(

                $contains($Type, "BusinessObject") = false ? 
                    true : $type($lookup($Datalake.BusinessObjects, $Type)) = "object"
          )};
        
          $Datalake   := $;
          $Components := $Datalake.components;
        
          $Query := $distinct(BusinessObjects.$spread().(
        
            $BusinessObject_ID :=  $keys()[0];
        
            *.parameters.(

                {
                  "BusinessObject_ID": $BusinessObject_ID,
                  "Attribute": "type",
                  "Attribute_value": type,
                  "IsValid": $TypeIsValid(type, $Datalake)
                }[IsValid=false]
            )
          ));
        
          [$Query.(
              {
                  "uid": "$custom-BusinessObjects-TypeIsBusinessObject-" & BusinessObject_ID & "-" & Attribute,
                  "location": "/entities/links/blank?id=" & BusinessObject_ID,
                  "correction": "Корректно заполните реквизит: " & Attribute & " в шагах процесса\n текущее значение = " & Attribute_value,
                  "description": "Значение реквизита должно быть заполнено строкой в формате DDD, ссылающейся BusinessObjects"
              }
          )]
        
        )