docs:

  Common.doc.ApplicationsListOfInformationSystems:
    location: "Архитектура приложений/Общий список систем и сервисов"
    type: table
    headers:
      - value: organization_title
        text: "Организация"
        sortable: true
        link: organization_link
      - value: title
        text: "Наименование"
        sortable: true
        link: extended_component_card
      - value: description
        text: "Описание"
      - value: area
        text: "Функ. область"
        sortable: true
        link: area_id
      - value: state
        text: "Статус"
        sortable: true
      - value: development_platform
        text: "Платформа"
        sortable: true
    source: Appication.dataset.ListOfInformationSystems

  Common.doc.DataListOfInformationSystems:
    location: "Архитектура данных/Общий список систем и сервисов"
    type: table
    headers:
      - value: organization_title
        text: "Организация"
        sortable: true
        link: organization_link
      - value: title
        text: "Наименование"
        sortable: true
        link: extended_component_card
      - value: description
        text: "Описание"
      - value: area
        text: "Функ. область"
        sortable: true
        link: area_id
      - value: state
        text: "Статус"
        sortable: true
      - value: development_platform
        text: "Платформа"
        sortable: true
    source: Appication.dataset.ListOfInformationSystems

  # Опциональная документация по системе или её компонентам, документация не выводится в меню, он прикрепляется к карточке системы
  Application.doc.ApplicationDocs:
    type: table
    headers:
      - value: Doc_Description
        text: Описание документа
        sortable: true
        align: left
        width: 100%
        link: Doc_Link
    source: Application.dataset.ApplicationDocs

  # Используемые технологии при разработке приложения
  Application.doc.ApplicationTechnologies:
    type: table
    headers:
      - value: technology_ID
        text: Технология
        sortable: true
        align: left
        width: 30%
        link: technology_link
      - value: technology_section
        text: Секция
        sortable: true
        align: left
        width: 20%
      - value: technology_status
        text: Статус
        sortable: false
        align: left
        width: 10%
      - value: technology_aliases
        text: Синонимы
        sortable: true
        align: left
        width: 40%
    source: Application.dataset.Technologies

  # Ключевые сотрудники, контакты
  Application.doc.KeyContacts:
    type: table
    headers:
      - value: title
        text: Роль
        sortable: true
        align: left
        width: 30%
      - value: acc_description
        text: Описание
        sortable: true
        align: left
        width: 20%
      - value: res_persons
        text: ФИО
        sortable: true
        align: left
        width: 40%
        link: acc_link
      - value: acc_email
        text: Почта
        sortable: true
        align: left
        width: 40%
    source: Application.dataset.KeyContacts

  # Общая сетевая диаграмма приложений
  Application.doc.Network:
    location: "Архитектура приложений/Сетевая диаграмма систем и сервисов"
    type: Network
    source: >
      (
        $DataLake := $;

        $adges :=  $distinct(links.$spread().(
            
            $d := $.*;
            
            $AppID_to   := $eval($DataLake.functions.get_system_and_subsystem_by_id,{"Id": $d.to, "Datalake": $DataLake}).System_Id;
            $AppID_from := $eval($DataLake.functions.get_system_and_subsystem_by_id,{"Id": $d.from, "Datalake": $DataLake}).System_Id;

            {
             "from": $AppID_from,
             "to": $AppID_to,
             "type": $lookup($DataLake.components, $AppID_from).extension.type 
            }
        ))[type="system" or type="subsystem"];
      
      
        /* Выявляем ноды из связей */
        $nodes := $distinct($append($adges.from, $adges.to)).(
          $struct := $split($, ".");
          $group := $replace($, "." & $reverse($struct)[0], "");
          {
            "id": $,
            "label": $lookup($DataLake.components, $).title,
            "group": $group,
            "level": $count($struct),
            /* Позиционируем ноду тем выше, чем выше слой */
            "y": $count($struct) * 200
          }
        );
        /* Добавляем ноды легенды */
        $nodes := $append($nodes, (
          /* Получаем максимальную точку позиции нод */
          $height := $max($nodes.y);
          $groups := $distinct($nodes.group)^($);
          /* Вычисляем центр легенды */
          $offset := -($height / 2);
          /* Определяем шаг легенды */
          $step := $height / $count($groups);
          /* Строим легенду */
          $map($groups, function($v, $i, $a) {
            {
              "id": "legend-" & $string($i),
              "x": -600,
              "y": $i * $step + $offset,
              "shape": "square",
              "label":  $lookup($DataLake.components, $v).title,
              "group": $v,
              "value": 1,
              "size": 5,
              "fixed": true,
              "physics": false
            }
          })
        ));
        /* Выводим результат */
        {
          "nodes": $nodes, /* Массив нод */
          "edges": $adges, /* Массив связей */
          "options": {     /* Параметры сетевой диаграммы https://visjs.github.io/vis-network/docs/network/ */
            "clickToUse": false /* Отключаем обязательный клик перед взаимодействем с пользователем */
          }
        }
      )

  # Функциональность приложений и сервисов
  Application.doc.Aspects:
    type: table
    headers:
      - value: aspect_title
        text: Функциональность
        sortable: true
        link: aspect_link
    source: Application.dataset.Aspects